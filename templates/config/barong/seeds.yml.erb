# List of Barong administrators.
#
# Other parameters that you can set here can be found in Account,
# Profile and Phone models (e.g. app/models/account.rb...); all the
# model properties are listed at the very bottom of this models files.
#
# Note: email is the only required field here.
users:
  - email: admin@barong.io
    password: 0lDHd9ufs9t@
    role: admin
    state: active
    level: 3
  - email: john@barong.io
    password: Am8icnzEI3d!
    role: member
    state: active
    level: 3

levels:
  - key: email
    value: verified
    description: "User clicked on the confirmation link"
  - key: phone
    value: verified
    description: "User entered a valid code from sms"
  - key: document
    value: verified
    description: "User personal documents have been verified"

restrictions: {}
# - { category: whitelist, scope: country, value: UA, state: disabled }
# - { category: maintenance, scope: all, value: all, state: disabled }
# - { category: blacklist, scope: ip, value: 164.116.47.255, state: disabled, code: 433 }
# - { category: blacklist, scope: ip_subnet, value: 164.116.47.0/24, state: disabled, code: 434 }
# - { category: blacklist, scope: country, value: USA, state: disabled, code: 435 }
# - { category: blacklist, scope: continent, value: SA, state: disabled, code: 436 }

permissions:
# SUPER ADMIN has an access to the whole system without any limits
# so we can just grant him access to /api/v2/*
 - { role: superadmin, verb: all, path: api/v2, action: accept }
<%- if @config['finex']['enabled'] -%>
 - { role: superadmin, verb: post, path: api/v2/trade/market/orders, action: drop }
<%- end -%>
 # superadmin has a full access to the peatio admin api
 - { role: superadmin, verb: all, path: admin, action: accept }
 - { role: superadmin, verb: get, path: assets, action: accept }
 - { role: superadmin, verb: all, path: api/v2/newKyc/admin, action: accept }
 - { role: superadmin, verb: all, path: api/v2/announcement/admin, action: accept }

 # we are watching after you 0_0
 - { role: superadmin, verb: all, path: admin, action: audit }
 - { role: superadmin, verb: all, path: api/v2/, action: audit }
# ADMIN
# admin has nearly full access to barong and peatio api, except managing permissions
 - { role: admin, verb: all, path: api/v2, action: accept }
<%- if @config['finex']['enabled'] -%>
 - { role: admin, verb: post, path: api/v2/trade/market/orders, action: drop }
<%- end -%>
 # admin has a full access to the peatio admin api
 - { role: admin, verb: all, path: admin, action: accept }
 - { role: admin, verb: get, path: assets, action: accept }
 # admin doesnt have access to manage platform roles and permissions
 - { role: admin, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 # we are watching after you 0_0
 - { role: admin, verb: all, path: admin, action: audit }
 - { role: admin, verb: all, path: api/v2, action: audit }

# ACCOUNTANT
 # accountant has a read access to the peatio admin api
 - { role: accountant, verb: get, path: api/v2/barong/admin/metrics, action: accept }
 - { role: accountant, verb: get, path: admin/deposits, action: accept }
 - { role: accountant, verb: get, path: admin/withdraws, action: accept }
 - { role: accountant, verb: get, path: admin/members, action: accept }
 - { role: accountant, verb: get, path: admin/operations, action: accept }
 - { role: accountant, verb: get, path: admin/balance_sheet, action: accept }
 - { role: accountant, verb: get, path: admin/income_statement, action: accept }
 - { role: accountant, verb: get, path: assets, action: accept }
 # accountant has a read access to barong admin
 - { role: accountant, verb: get, path: api/v2/barong/admin, action: accept }
 # has an ability to ban user
 - { role: accountant, verb: put, path: api/v2/barong/admin/users, action: accept }
 - { role: accountant, verb: put, path: api/v2/barong/admin/users/labels, action: drop }
 # ranger access
 - { role: accountant, verb: get, path: api/v2/ranger, action: accept }
 # sunshine access
 - { role: accountant, verb: all, path: api/v2/sunshine, action: accept }
 # airdrop access
 - { role: accountant, verb: all, path: api/v2/airdrop, action: accept }
 # wallet access
 - { role: accountant, verb: all, path: api/v2/wallet, action: accept }
 # ieo access
 - { role: accountant, verb: all, path: api/v2/ieo, action: accept }
 # stake access
 - { role: accountant, verb: all, path: api/v2/stake, action: accept }
 # referral access
 - { role: accountant, verb: all, path: api/v2/referral, action: accept }
 # competition access
 - { role: accountant, verb: all, path: api/v2/competition, action: accept }
 # profit access
 - { role: accountant, verb: all, path: api/v2/profit, action: accept }
 # holder access
 - { role: accountant, verb: all, path: api/v2/holder, action: accept }
 # transaction access
 - { role: accountant, verb: all, path: api/v2/transaction, action: accept }
 # statistic access
 - { role: accountant, verb: all, path: api/v2/statistic, action: accept }
 # newKyc access
 - { role: accountant, verb: all, path: api/v2/newKyc, action: accept }
 # banner access
 - { role: accountant, verb: all, path: api/v2/banner, action: accept }
 # withdrawLimit access
 - { role: accountant, verb: all, path: api/v2/withdrawLimit, action: accept }
 # announcement access
 - { role: accountant, verb: all, path: api/v2/announcement, action: accept }
 # accountant doesnt have access to manage platform roles and permissions

 - { role: accountant, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 # we are watching after you 0_0
 - { role: accountant, verb: all, path: admin, action: audit }
 - { role: accountant, verb: all, path: api/v2, action: audit }

# COMPLIANCE
 # has an access to CRUD of user-related resources
 - { role: compliance, verb: get, path: api/v2/barong/admin/metrics, action: accept }
 - { role: compliance, verb: post, path: api/v2/barong/admin/users, action: accept }
 - { role: compliance, verb: put, path: api/v2/barong/admin/users, action: accept }
 - { role: compliance, verb: get, path: api/v2/barong/admin/users, action: accept }
 - { role: compliance, verb: delete, path: api/v2/barong/admin/users, action: accept }
 - { role: compliance, verb: get, path: api/v2/barong/admin/activities, action: accept }
 # has read-only access to peatio admin api
 - { role: compliance, verb: get, path: admin/deposits, action: accept }
 - { role: compliance, verb: get, path: admin/withdraws, action: accept }
 - { role: compliance, verb: get, path: admin/members, action: accept }
 - { role: compliance, verb: get, path: admin/operations, action: accept }
 - { role: compliance, verb: get, path: admin/balance_sheet, action: accept }
 - { role: compliance, verb: get, path: admin/income_statement, action: accept }
 - { role: compliance, verb: get, path: assets, action: accept }
 # ranger access
 - { role: compliance, verb: get, path: api/v2/ranger, action: accept }
 # sunshine access
 - { role: compliance, verb: all, path: api/v2/sunshine, action: accept }
 # airdrop access
 - { role: compliance, verb: all, path: api/v2/airdrop, action: accept }
 # wallet access
 - { role: compliance, verb: all, path: api/v2/wallet, action: accept }
 # ieo access
 - { role: compliance, verb: all, path: api/v2/ieo, action: accept }
 # stake access
 - { role: compliance, verb: all, path: api/v2/stake, action: accept }
 # referral access
 - { role: compliance, verb: all, path: api/v2/referral, action: accept }
 # competition access
 - { role: compliance, verb: all, path: api/v2/competition, action: accept }
  # profit access
 - { role: compliance, verb: all, path: api/v2/profit, action: accept }
 # holder access
 - { role: compliance, verb: all, path: api/v2/holder, action: accept }
 # transaction access
 - { role: compliance, verb: all, path: api/v2/transaction, action: accept }
 # statistic access
 - { role: compliance, verb: all, path: api/v2/statistic, action: accept }
 # newKyc access
 - { role: compliance, verb: all, path: api/v2/newKyc, action: accept }
 # banner access
 - { role: compliance, verb: all, path: api/v2/banner, action: accept }
 # withdrawLimit access
 - { role: compliance, verb: all, path: api/v2/withdrawLimit, action: accept }
 # paypal access
 - { role: compliance, verb: all, path: api/v2/paypal, action: accept }
 # event access
 - { role: compliance, verb: all, path: api/v2/event, action: accept}
 # announcement access
 - { role: compliance, verb: all, path: api/v2/announcement, action: accept }
 # compliance doesnt have access to manage platform roles and permissions
 - { role: compliance, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 # we are watching after you 0_0
 - { role: compliance, verb: all, path: admin, action: audit }
 - { role: compliance, verb: all, path: api/v2, action: audit }

# TECHNICAL
 # has an access to CRUD of peatio admin functionality on market, blockchain, wallets, currencies
 - { role: technical, verb: get, path: assets, action: accept }
 - { role: technical, verb: get, path: admin, action: accept }
 - { role: technical, verb: all, path: admin/wallets, action: accept }
 - { role: technical, verb: all, path: admin/markets, action: accept }
 - { role: technical, verb: all, path: admin/blockchains, action: accept }
 - { role: technical, verb: all, path: admin/currencies, action: accept }

 # ranger access
 - { role: technical, verb: get, path: api/v2/ranger, action: accept }
 # sunshine access
 - { role: technical, verb: all, path: api/v2/sunshine, action: accept }
 # airdrop access
 - { role: technical, verb: all, path: api/v2/airdrop, action: accept }
 # wallet access
 - { role: technical, verb: all, path: api/v2/wallet, action: accept }
 # ieo access
 - { role: technical, verb: all, path: api/v2/ieo, action: accept }
 # stake access
 - { role: technical, verb: all, path: api/v2/stake, action: accept }
 # referral access
 - { role: technical, verb: all, path: api/v2/referral, action: accept }
 # competition access
 - { role: technical, verb: all, path: api/v2/competition, action: accept }
 # profit access
 - { role: technical, verb: all, path: api/v2/profit, action: accept }
 # holder access
 - { role: technical, verb: all, path: api/v2/holder, action: accept }
 # transaction access
 - { role: technical, verb: all, path: api/v2/transaction, action: accept }
 # statistic access
 - { role: technical, verb: all, path: api/v2/statistic, action: accept }
 # newKyc access
 - { role: technical, verb: all, path: api/v2/newKyc, action: accept }
 # banner access
 - { role: technical, verb: all, path: api/v2/banner, action: accept }
 # withdrawLimit access
 - { role: technical, verb: all, path: api/v2/withdrawLimit, action: accept }
 # paypal access
 - { role: technical, verb: all, path: api/v2/paypal, action: accept }
 # event access
 - { role: technical, verb: all, path: api/v2/event, action: accept}
 # announcement access
 - { role: technical, verb: all, path: api/v2/announcement, action: accept }

 # technical doesnt have access to manage platform roles and permissions
 - { role: technical, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 # we are watching after you 0_0
 - { role: technical, verb: all, path: admin, action: audit }
 - { role: technical, verb: all, path: api/v2, action: audit }

# SUPPORT
 # has read only access to several statistic and user-related endpoints
 - { role: support, verb: get, path: admin/deposits, action: accept }
 - { role: support, verb: get, path: admin/withdraws, action: accept }
 - { role: support, verb: get, path: admin/members, action: accept }
 - { role: support, verb: get, path: admin/operations, action: accept }
 - { role: support, verb: get, path: api/v2/barong/admin/users, action: accept }
 - { role: support, verb: get, path: admin/balance_sheet, action: accept }
 - { role: support, verb: get, path: admin/income_statement, action: accept }
 - { role: support, verb: get, path: assets, action: accept }
 - { role: support, verb: get, path: admin, action: accept }
 # sunshine access
 - { role: support, verb: all, path: api/v2/sunshine, action: accept }
 # airdrop access
 - { role: support, verb: all, path: api/v2/airdrop, action: accept }
 # wallet access
 - { role: support, verb: all, path: api/v2/wallet, action: accept }
 # ieo access
 - { role: support, verb: all, path: api/v2/ieo, action: accept }
 # stake access
 - { role: support, verb: all, path: api/v2/stake, action: accept }
 # referral access
 - { role: support, verb: all, path: api/v2/referral, action: accept }
 # profit access
 - { role: support, verb: all, path: api/v2/profit, action: accept }
 # competition access
 - { role: support, verb: all, path: api/v2/competition, action: accept }
 # holder access
 - { role: support, verb: all, path: api/v2/holder, action: accept }
 # transaction access
 - { role: support, verb: all, path: api/v2/transaction, action: accept }
 # statistic access
 - { role: support, verb: all, path: api/v2/statistic, action: accept }
 # newKyc access
 - { role: support, verb: all, path: api/v2/newKyc, action: accept }
 # banner access
 - { role: support, verb: all, path: api/v2/banner, action: accept }
 # withdrawLimit access
 - { role: support, verb: all, path: api/v2/withdrawLimit, action: accept }
 # paypal access
 - { role: support, verb: all, path: api/v2/paypal, action: accept }
 # event access
 - { role: support, verb: all, path: api/v2/event, action: accept}
 # announcement access
 - { role: support, verb: all, path: api/v2/announcement, action: accept }
 # support doesnt have access to manage platform roles and permissions
 - { role: support, verb: all, path: api/v2/barong/admin/permissions, action: drop }
 # we are watching after you 0_0
 - { role: support, verb: all, path: admin, action: audit }
 - { role: support, verb: all, path: api/v2, action: audit }

# TRADER
 # has standard user permissions to ACCOUNT, MARKET, RESOURCE modules
 - { role: trader, verb: all, path: api/v2/trade/account, action: accept }
<%- if @config['finex']['enabled'] -%>
 - { role: trader, verb: get, path: api/v2/trade/market, action: accept }
 - { role: trader, verb: all, path: api/v2/finex/market, action: accept }
 - { role: trader, verb: post, path: api/v2/trade/market/orders, action: drop }
<%- else -%>
 - { role: trader, verb: all, path: api/v2/trade/market, action: accept }
<%- end -%>
 - { role: trader, verb: all, path: api/v2/barong/resource, action: accept }
 - { role: trader, verb: all, path: api/v2/resource, action: accept }
 # ranger access
 - { role: trader, verb: get, path: api/v2/ranger, action: accept }
 # sunshine access
 - { role: trader, verb: all, path: api/v2/sunshine, action: accept }
 # airdrop access
 - { role: trader, verb: all, path: api/v2/airdrop, action: accept }
 # wallet access
 - { role: trader, verb: all, path: api/v2/wallet, action: accept }
 # ieo access
 - { role: trader, verb: all, path: api/v2/ieo, action: accept }
 # stake access
 - { role: trader, verb: all, path: api/v2/stake, action: accept }
 # referral access
 - { role: trader, verb: all, path: api/v2/referral, action: accept }
 # profit access
 - { role: trader, verb: all, path: api/v2/profit, action: accept }
 # competition access
 - { role: trader, verb: all, path: api/v2/competition, action: accept }
 # holder access
 - { role: trader, verb: all, path: api/v2/holder, action: accept }
 # transaction access
 - { role: trader, verb: all, path: api/v2/transaction, action: accept }
 # statistic access
 - { role: trader, verb: all, path: api/v2/statistic, action: accept }
 # newKyc access
 - { role: trader, verb: all, path: api/v2/newKyc, action: accept }
 # banner access
 - { role: trader, verb: all, path: api/v2/banner, action: accept }
 # withdrawLimit access
 - { role: trader, verb: all, path: api/v2/withdrawLimit, action: accept }
 # paypal access
 - { role: trader, verb: all, path: api/v2/paypal, action: accept }
 # event access
 - { role: trader, verb: all, path: api/v2/event, action: accept}
 # announcement access
 - { role: trader, verb: all, path: api/v2/announcement, action: accept }

 # MEMBER
 # has standard user permissions to ACCOUNT, MARKET, RESOURCE modules
 - { role: member, verb: all, path: api/v2/trade/account, action: accept }
 # sunshine access
 - { role: member, verb: all, path: api/v2/sunshine, action: accept }
 # airdrop access
 - { role: member, verb: all, path: api/v2/airdrop, action: accept }
 # wallet access
 - { role: member, verb: all, path: api/v2/wallet, action: accept }
 # ieo access
 - { role: member, verb: all, path: api/v2/ieo, action: accept }
 # stake access
 - { role: member, verb: all, path: api/v2/stake, action: accept }
 # referral access
 - { role: member, verb: all, path: api/v2/referral, action: accept }
 # profit access
 - { role: member, verb: all, path: api/v2/profit, action: accept }
 # competition access
 - { role: member, verb: all, path: api/v2/competition, action: accept }
 # holder access
 - { role: member, verb: all, path: api/v2/holder, action: accept }
 # transaction access
 - { role: member, verb: all, path: api/v2/transaction, action: accept }
 # statistic access
 - { role: member, verb: all, path: api/v2/statistic, action: accept }
 # newKyc access
 - { role: member, verb: all, path: api/v2/newKyc, action: accept }
 # banner access
 - { role: member, verb: all, path: api/v2/banner, action: accept }
 # withdrawLimit access
 - { role: member, verb: all, path: api/v2/withdrawLimit, action: accept }
 # paypal access
 - { role: member, verb: all, path: api/v2/paypal, action: accept }
 # event access
 - { role: member, verb: all, path: api/v2/event, action: accept}
 # announcement access
 - { role: member, verb: all, path: api/v2/announcement, action: accept }
<%- if @config['finex']['enabled'] -%>
 - { role: member, verb: get, path: api/v2/trade/market, action: accept }
 - { role: member, verb: all, path: api/v2/finex/market, action: accept }
 - { role: member, verb: post, path: api/v2/trade/market/orders, action: drop }
<%- else -%>
 - { role: member, verb: all, path: api/v2/trade/market, action: accept }
<%- end -%>
 - { role: member, verb: all, path: api/v2/barong/resource, action: accept }
 - { role: member, verb: all, path: api/v2/resource, action: accept }
 # ranger access
 - { role: member, verb: get, path: api/v2/ranger, action: accept }

 # BROKER
 # has standard user permissions to ACCOUNT, MARKET, RESOURCE modules
 - { role: broker, verb: all, path: api/v2/trade/account, action: accept }
 # sunshine access
 - { role: broker, verb: all, path: api/v2/sunshine, action: accept }
 # airdrop access
 - { role: broker, verb: all, path: api/v2/airdrop, action: accept }
 # wallet access
 - { role: broker, verb: all, path: api/v2/wallet, action: accept }
 # ieo access
 - { role: broker, verb: all, path: api/v2/ieo, action: accept }
 # stake access
 - { role: broker, verb: all, path: api/v2/stake, action: accept }
 # referral access
 - { role: broker, verb: all, path: api/v2/referral, action: accept }
 # profit access
 - { role: broker, verb: all, path: api/v2/profit, action: accept }
 # competition access
 - { role: broker, verb: all, path: api/v2/competition, action: accept }
 # holder access
 - { role: broker, verb: all, path: api/v2/holder, action: accept }
 # transaction access
 - { role: broker, verb: all, path: api/v2/transaction, action: accept }
 # statistic access
 - { role: broker, verb: all, path: api/v2/statistic, action: accept }
 # newKyc access
 - { role: broker, verb: all, path: api/v2/newKyc, action: accept }
 # banner access
 - { role: broker, verb: all, path: api/v2/banner, action: accept }
 #  withdrawLimit access
 - { role: broker, verb: all, path: api/v2/withdrawLimit, action: accept }
 #  paypal access
 - { role: broker, verb: all, path: api/v2/paypal, action: accept }
 # event access
 - { role: broker, verb: all, path: api/v2/event, action: accept}
 #  announcement access
 - { role: broker, verb: all, path: api/v2/announcement, action: accept }
<%- if @config['finex']['enabled'] -%>
 - { role: broker, verb: get, path: api/v2/trade/market, action: accept }
 - { role: broker, verb: all, path: api/v2/finex/market, action: accept }
 - { role: broker, verb: post, path: api/v2/trade/market/orders, action: drop }
<%- else -%>
 - { role: broker, verb: all, path: api/v2/trade/market, action: accept }
<%- end -%>
 - { role: broker, verb: all, path: api/v2/barong/resource, action: accept }
 - { role: broker, verb: all, path: api/v2/resource, action: accept }
 # ranger access
 - { role: broker, verb: get, path: api/v2/ranger, action: accept }